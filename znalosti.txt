composer global require laravel/installer

laravel --version

# mac musi nejprve povolit terminalu pouzivat composer knihovny
#toto otevre editor configuracniho souboru, kam muzete uvest jake programy vas terminal muze pouzivat
open -e ~/.zshrc
#pokud prvni prikaz zfailoval protoze soubor neexistuje, tka ho muzete vytvorit pomoci tohoto prikazu
touch ~/.zshrc
#do editoru vlozte tento radek a ulozte zavrete soubor a zrestartujte vase terminaly nebo VSC
PATH="$HOME/.composer/vendor/bin:$PATH"

#tvorba projektu pro windows
composer create-project laravel/laravel combi-laravel
#tvorba projektu pro mac
composer create-project --prefer-dist laravel/laravel combi-laravel

#po uspesnem vytvoreni projektu si projekt otevreme v VSC
#info o vendoru a composer.json
#v gitu jsme se naucili, ze vendor se na github nedava
# kdyz si stahnete neci projekt, tak si ho vetsinou stajhnete bez knihoven, ktere jsou ve vendoru
#projekt ale ma soubor composer.json, ve ktrem je napsano jake knihovny musite dostahovat
#spuste terminual v korenovem adresari vaseho projektu. #tento prikaz knihovny nastahuje zpatky
composer install

#laravel ma svuj vlastni localni server, ktery spustime timto prikazem
php artisan serve

#.poeditujeme soubor .env a napisem tam ip adresu databaze, port a prihlasovaci udaje

#tabulky budeme v laravelu vytvaret pomoci migracnich souboru
#do migracnich souboru se pise struktura tabulky
#laravel ma mnoho datovych typu pro sloupecky tabulek: https://laravel.com/docs/10.x/migrations#available-column-types

#pustime prikaz, ktery precte migracni soubory a vytvori tbaulky v nasi DB
php artisan migrate

#vytvorime si vlastni migracni soubor pomoci prikazu
php artisan make:migration VytvoritTabulkuZvire

#pokud jste na zacatku vyvoje a tabulky mate prazdne, tak klidne muzete nejaky migracni souzbor upravit a cele to premigrovat od 0
#bacha toto vam zresetuje vsechny migrace
php artisan migrate:refresh

#pokud chce vsechny migrace zrusit 
#toto migrace zrusi a migraci uz nedela
php artisan migrate:rollback

#pokud uz v tabulkach data mate, tak nikdy nedelete kompletni reset, prijdete o data
pokud chcete existujici tbaulky nejak upravit, tak vytvorte novy migracni soubor, ktery tabulku upravi

#pokud chceme pomoci laravelu do tabulek nassedovat nejaka data ta mmusime nejprve vytvorit soubor
php artisan make:Seeder ChovatelSeeder

#timto prikazem pak spustite seeder
php artisan db:seed --class=ChovatelSeeder
php artisan db:seed --class=ZvireSeeder

#vytvorime si controller
php artisan make:Controller HomeController

#vytvorime model
php artisan make:Model Model_chovatel
php artisan make:Model Model_zvire

#presnueme funcki kteoru mame v route do contorlleru a dame ji jmeno index
#v route pak do druheo parametru vlzime pole, prvni polzka pole ja nazec classy contorller a druha polozka je funkce contorlleru
#nahore v rounte musime uvest i use

#v modelu uvedeme 2 proctected vlastnosti
#podle techto dvou vlasnosti model vi o jakou tbaulku se ma starat
proctected $table;
proctected $primaryKey;

#uvnitr contorlleru chcme ziskat data z db, controller musi pozadat model o data
JmenoModelu::all();

#v blade sablone vytovrime formular
#do furmulare musime vlozit tuto znacku
@csrf
#tato znacka chrani server proti utoku typu Cross Site Request Forgery

# ve formulari uvedete do action nejakou url na ktere se bude formular zpracovavat

#route web.php tuto action zachyti a zavola nejakou funkci contorlleru

#funkce controlleru, ktera zracovava formular musi mit v parametru argument Request

#na tomto parametru muzeme zavolat funkci ->input() a ziskat tak data formulare nebo muzeme zavolat ->validate() a zkontorlovat spravnost dat

#pokud validate narazi na chybu, tak okamzite presmeruje uzivtale zpet na stranku s formularem a prida navic promenne $errors a $old
#v promenne errors jsou chyby fomulare a v promenne old jsou ty poslany data

#pokud validate neobjevi chybu, tak program pokracuje dal bez preruseni